@import url('https://fonts.googleapis.com/css2?family=DM+Sans&family=Maven+Pro&display=swap');
 

* {
    box-sizing: border-box;
}


body {
font-family: 'Maven Pro', sans-serif;
background-color: #417f9e;
color: #fff;
/* we want to center everything vertically&horizontally */
display: flex;
flex-direction: column;
align-items: center;
justify-content: center;
height: 100vh;
margin: 0;
}

.first-container {
    margin: 20px 0;
}

.first-container select {
    background-color: #fff;
    /* border: 0; */
    border-radius: 10px;
    font-size: 14px;
    margin-left: 5px;
    padding: 5px 5px;

    /* padding to be work on the other browser*/
   -moz-appearance: none;
   -webkit-appearance: none;
   appearance: none;
}


.case {
    background-color: #eef2f5;
    /* get rid of bullet points */
    list-style-type: none;
    color: #444451;
    padding: 10px 10px;
    border-radius: 5px;
    /* horizontal  */
    display: flex;
    justify-content: space-between;
    
}

.case li {
    display: flex;
    justify-content: center;
    margin:0 10px;
}

.case li small {
    margin-left: 3px;
}




.seat {
    background-color: #494961;
    height: 12px;
    width: 15px;
    margin: 3px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
}

.row {
    display: flex;
}

.seat:nth-of-type(2) {
    margin-right: 10px ;
}

/* .seat:nth-last-of-type(2){} */
.seat:nth-of-type(6) {
    margin-right: 10px ;
}

.seat:not(.occupied):hover{
    /* The cursor property specifies the mouse 
    cursor to be displayed when pointing over an element. */
    cursor: pointer;
    /* applies a 2D or 3D transformation to an element. This property allows you to
     rotate, scale, move, skew, etc., elements. Default scale is 1*/
    transform: scale(1.2);
}

.case .seat:not(.occupied):hover{
    cursor: default;
    transform: scale(1);
}

.seat.selected {
    background-color: #6feaf6;
}

.seat.occupied {
    background-color: #fff;
}

.second-container {
    /* is used to give a 3D-positioned element some perspective. */
    /* When defining the perspective property for an element, 
    it is the CHILD elements that get the perspective view, NOT the element itself. */
    perspective: 1000px;
    margin-bottom: 30px;
}
.screen {
    background-color: #fafafa;
    height: 70px;
    width: 100%;
    margin: 10px 0;
    transform: rotateX(-45deg);
    box-shadow: 0 3px 10px rgba(255, 255, 255, 0.7);
  
}

p.text {
    margin: 5px 0;
}

p.text span{
    color: #38f42b;
}